<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Martin Klepsch</title><subtitle>Martin Klepsch's blog</subtitle><generator uri="https://perun.io/" version="0.4.2-SNAPSHOT">Perun</generator><link href="https://www.martinklepsch.org/" type="text/html"></link><link href="https://www.martinklepsch.org/atom-3.xml" rel="self"></link><link href="https://www.martinklepsch.org/atom.xml" rel="first"></link><link href="https://www.martinklepsch.org/atom-5.xml" rel="last"></link><link href="https://www.martinklepsch.org/atom-4.xml" rel="next"></link><link href="https://www.martinklepsch.org/atom-2.xml" rel="previous"></link><updated>2020-05-10T15:26:34Z</updated><id>https://www.martinklepsch.org/</id><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author><entry><id>urn:uuid:1f571433-ffa3-4d3b-9c5d-6220cf9ebe54</id><title>Running a Clojure Uberjar inside Docker</title><link href="https://www.martinklepsch.org/posts/running-a-clojure-uberjar-inside-docker.html" type="text/html" title="Running a Clojure Uberjar inside Docker" rel="alternate"></link><published>2014-09-11T00:00:00Z</published><updated>2014-09-11T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/running-a-clojure-uberjar-inside-docker.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="For a sideproject I wanted to deploy a Clojure uberjar on a remote server using Docker. I imagined that to be fairly straight foward but there are some caveats you need to be aware of. Naive..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/running-a-clojure-uberjar-inside-docker.html" rel="canonical"&gt;&lt;title&gt;Running a Clojure Uberjar inside Docker — Martin Klepsch&lt;/title&gt;&lt;meta content="Running a Clojure Uberjar inside Docker" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="For a sideproject I wanted to deploy a Clojure uberjar on a remote server using Docker. I imagined that to be fairly straight foward but there are some caveats you need to be aware of. Naive..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/running-a-clojure-uberjar-inside-docker.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Running a Clojure Uberjar inside Docker" name="twitter:title"&gt;&lt;meta content="For a sideproject I wanted to deploy a Clojure uberjar on a remote server using Docker. I imagined that to be fairly straight foward but there are some caveats you need to be aware of. Naive..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/running-a-clojure-uberjar-inside-docker.html" title="Permalink: Running a Clojure Uberjar inside Docker"&gt;September 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Running a Clojure Uberjar inside Docker&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;For a sideproject I wanted to deploy a Clojure uberjar on a remote server using Docker. I imagined that to be fairly straight foward but there are some caveats you need to be aware of.&lt;/p&gt;
&lt;p&gt;Naively my first attempt looked somewhat like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM dockerfile/java
ADD https://example.com/app-standalone.jar /
EXPOSE 8080
ENTRYPOINT [ &amp;quot;java&amp;quot;, &amp;quot;-verbose&amp;quot;, &amp;quot;-jar&amp;quot;, &amp;quot;/app-standalone.jar&amp;quot; ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I expected this to work. But it didn't. Instead it just printed the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Opened /usr/lib/jvm/java-7-oracle/jre/lib/rt.jar]
# this can vary depending on what JRE you're using
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that has only been printed because I added &lt;code&gt;-verbose&lt;/code&gt; when starting the jar. So if you're not running the jar verbosely it'll fail without any output. Took me quite some time to figure that out.&lt;/p&gt;
&lt;p&gt;As it turns out the &lt;code&gt;dockerfile/java&lt;/code&gt; image contains a &lt;code&gt;WORKDIR&lt;/code&gt; command that somehow breaks my &lt;code&gt;java&lt;/code&gt; invocation, even though it is using absolute paths everywhere.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#what-worked-for-me" id="what-worked-for-me"&gt;&lt;/a&gt;What worked for me&lt;/h2&gt;
&lt;p&gt;I ended up splitting the procedure into two files in a way that allowed me to always get the most recent jar when starting the docker container.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; basically just adds a small script to the container that downloads and starts a jar it downloads from somewhere (S3 in my case).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM dockerfile/java
ADD fetch-and-run.sh /
EXPOSE 42042
EXPOSE 3000
CMD [&amp;quot;/bin/sh&amp;quot;, &amp;quot;/fetch-and-run.sh&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here is &lt;code&gt;fetch-and-run.sh&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/sh
wget https://s3.amazonaws.com/example/yo-standalone.jar -O /yo-standalone.jar;
java -verbose -jar /yo-standalone.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now when you build a new image from that Dockerfile it adds the &lt;code&gt;fetch-and-run.sh&lt;/code&gt; script to the image's filesystem. Note that the jar is not part of the image but that it will be downloaded whenever a new container is being started from the image. That way a simple restart will always fetch the most recent version of the jar. In some scenarios it might become confusing to not have precise deployment tracking but in my case it turned out much more convenient than going through the process of destroying the container, deleting the image, creating a new image and starting up a new container.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, September 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:a0c71769-4de2-476d-9453-2a00ccd527a5</id><title>Using core.async and Transducers to upload files from the browser to S3</title><link href="https://www.martinklepsch.org/posts/using-coreasync-and-transducers-for-direct-s3-upload.html" type="text/html" title="Using core.async and Transducers to upload files from the browser to S3" rel="alternate"></link><published>2014-09-04T00:00:00Z</published><updated>2014-09-04T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/using-coreasync-and-transducers-for-direct-s3-upload.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="In a project I&amp;apos;m working on we needed to enable users to upload media content. In many scenarios it makes sense to upload to S3 directly from the browser instead of routing it through a serv..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/using-coreasync-and-transducers-for-direct-s3-upload.html" rel="canonical"&gt;&lt;title&gt;Using core.async and Transducers to upload files from the browser to S3 — Martin Klepsch&lt;/title&gt;&lt;meta content="Using core.async and Transducers to upload files from the browser to S3" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="In a project I&amp;apos;m working on we needed to enable users to upload media content. In many scenarios it makes sense to upload to S3 directly from the browser instead of routing it through a serv..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/using-coreasync-and-transducers-for-direct-s3-upload.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Using core.async and Transducers to upload files from the browser to S3" name="twitter:title"&gt;&lt;meta content="In a project I&amp;apos;m working on we needed to enable users to upload media content. In many scenarios it makes sense to upload to S3 directly from the browser instead of routing it through a serv..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/using-coreasync-and-transducers-for-direct-s3-upload.html" title="Permalink: Using core.async and Transducers to upload files from the browser to S3"&gt;September 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Using core.async and Transducers to upload files from the browser to S3&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;In a project I'm working on we needed to enable users to upload media content. In many scenarios it makes sense to upload to S3 directly from the browser instead of routing it through a server. If you're hosting on Heroku you need to do this anyways. After digging a bit into &lt;a href="https://github.com/clojure/core.async"&gt;&lt;code&gt;core.async&lt;/code&gt;&lt;/a&gt; this seemed like a neat little excuse to give Clojure's new transducers a go.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#the-problem" id="the-problem"&gt;&lt;/a&gt;The Problem&lt;/h2&gt;
&lt;p&gt;To upload files directly to S3 without any server in between you need to do a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable Cross-Origin Resource Sharing (CORS) on your bucket&lt;/li&gt;
&lt;li&gt;Provide special parameters in the request that authorize the upload&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Enabling CORS is fairly straightforward, just follow &lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html"&gt;the documentation&lt;/a&gt; provided by AWS. The aforementioned special parameters are based on your AWS credentials, the key you want to save the file to, it's content-type and &lt;a href="http://aws.amazon.com/articles/1434/"&gt;a few other things&lt;/a&gt;. Because you don't want to store your credentials in client-side code the parameters need to be computed on a server.&lt;/p&gt;
&lt;p&gt;We end up with the following procedure to upload a file to S3:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get a Javascript File object from the user&lt;/li&gt;
&lt;li&gt;Retrieve special parameters for post request from server&lt;/li&gt;
&lt;li&gt;Post &lt;strong&gt;directly from the browser&lt;/strong&gt; to S3&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a href="#server-side-code" id="server-side-code"&gt;&lt;/a&gt;Server-side code&lt;/h2&gt;
&lt;p&gt;I won't go into detail here, but here's &lt;a href="https://gist.github.com/martinklepsch/0c6b40f45a415046f0fe"&gt;some rough Clojure code&lt;/a&gt; illustrating the construction of the special parameters and how they're sent to the client.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#client-side-transducers-and-coreasync" id="client-side-transducers-and-coreasync"&gt;&lt;/a&gt;Client-side: Transducers and core.async&lt;/h2&gt;
&lt;p&gt;As we see the process involves multiple asynchronous steps: &lt;img src="/images/s3-direct.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;To wrap all that up into a useful minimal API that hides all the complex back and forth happening until a file is uploaded core.async channels and transducers turned out very useful:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defn s3-upload [report-chan]
  (let [upload-files (map #(upload-file % report-chan))
        upload-chan  (chan 10 upload-files)
        sign-files   (map #(sign-file % upload-chan))
        signing-chan (chan 10 sign-files)]

    (go (while true
          (let [[v ch] (alts! [signing-chan upload-chan])]
            ; that's not really required but has been useful
            (log v))))
    signing-chan))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function takes one channel as argument where it will &lt;code&gt;put!&lt;/code&gt; the result of the S3 request. You can take a look at the &lt;code&gt;upload-file&lt;/code&gt; and &lt;code&gt;sign-file&lt;/code&gt; functions &lt;a href="https://gist.github.com/martinklepsch/96e548d9595e111d70ce"&gt;in this gist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what's happening here?&lt;/strong&gt; We use a channel for each step of the process: &lt;code&gt;signing-chan&lt;/code&gt; and &lt;code&gt;upload-chan&lt;/code&gt;. Both of those channels have an associated transducer. In this case you can think best of a transducer as a function that's applied to each item in a channel on it's way through the channel. I initially trapped upon the fact that the transducing function is only applied when the element is being taken from the channel as well. Just putting things into a channel doesn't trigger the execution of the transducing function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;signing-chan&lt;/code&gt;'s transducer initiates the request to sign the File object that has been put into the channel. The second argument to the &lt;code&gt;sign-file&lt;/code&gt; function is a channel where the AJAX callback will put it's result. Similary &lt;code&gt;upload-chan&lt;/code&gt;'s transducer initiates the upload to S3 based on information that has been put into the channel. A callback will then put S3's response into the supplied &lt;code&gt;report-chan&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The last line returns the channel that can be used to initiate a new upload.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#using-this" id="using-this"&gt;&lt;/a&gt;Using this&lt;/h2&gt;
&lt;p&gt;Putting this into a library and opening it up for other people to use isn't overly complicated, the exposed API is actually very simple. Imagine an &lt;a href="https://github.com/swannodette/om"&gt;Om&lt;/a&gt; component &lt;code&gt;upload-form&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defn queue-file [e owner {:keys [upload-queue]}]
  (put! upload-queue (first (array-seq (.. e -target -files)))))

(defcomponent upload-form [text owner]
  (init-state [_]
    (let [rc (chan 10)]
      {:upload-queue (s3-upload rc)
       :report-chan rc}))
  (did-mount [_]
    (let [{:keys [report-chan]} (om/get-state owner)]
      (go (while true (log (&amp;lt;! report-chan))))))
  (render-state [this state]
    (dom/form
     (dom/input {:type &amp;quot;file&amp;quot; :name &amp;quot;file&amp;quot;
                 :on-change #(queue-file % owner state)} nil))))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I really like how simple this is. You put a file into a channel and whenever it's done you take the result from another channel. &lt;code&gt;s3-upload&lt;/code&gt; could take additional options like logging functions or a custom URL to retrieve the special parameters required to authorize the request to S3.&lt;/p&gt;
&lt;p&gt;This has been the first time I've been doing something useful with core.async and, probably less surprisingly, the first time I played with transducers. I assume many things can be done better and I still need to look into some things like how to properly shut down the &lt;code&gt;go&lt;/code&gt; blocks. &lt;strong&gt;Any feedback is welcome!&lt;/strong&gt; &lt;a href="https://twitter.com/martinklepsch"&gt;Tweet&lt;/a&gt; or &lt;a href="mailto://martinklepsch@googlemail.com"&gt;mail&lt;/a&gt; me!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt; to Dave Liepmann who let me peek into some code he wrote that did similar things and to Kevin Downey (&lt;em&gt;hiredman&lt;/em&gt;) who helped me understand core.async and transducers by answering my stupid questions in &lt;code&gt;#clojure&lt;/code&gt; on Freenode.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, September 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:6d204755-b8a0-4c43-98b2-b592e22970b7</id><title>Emacs &amp; Vim</title><link href="https://www.martinklepsch.org/posts/emacs-and-vim.html" type="text/html" title="Emacs &amp; Vim" rel="alternate"></link><published>2014-07-22T00:00:00Z</published><updated>2014-07-22T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/emacs-and-vim.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="After using Vim for more than four years my recent contacts with Lisp encouraged me to take another look at Emacs. I used to make jokes about Emacs just as Emacs users about Vim but actually..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/emacs-and-vim.html" rel="canonical"&gt;&lt;title&gt;Emacs &amp; Vim — Martin Klepsch&lt;/title&gt;&lt;meta content="Emacs &amp;amp; Vim" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="After using Vim for more than four years my recent contacts with Lisp encouraged me to take another look at Emacs. I used to make jokes about Emacs just as Emacs users about Vim but actually..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/emacs-and-vim.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Emacs &amp;amp; Vim" name="twitter:title"&gt;&lt;meta content="After using Vim for more than four years my recent contacts with Lisp encouraged me to take another look at Emacs. I used to make jokes about Emacs just as Emacs users about Vim but actually..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/emacs-and-vim.html" title="Permalink: Emacs &amp;amp; Vim"&gt;July 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Emacs &amp; Vim&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;After using Vim for more than four years my recent contacts with Lisp encouraged me to take another look at Emacs. I used to make jokes about Emacs just as Emacs users about Vim but actually it seems to be a pretty decent piece of software.&lt;/p&gt;
&lt;p&gt;Being a Vim user in the Clojure community sometimes feels weird. You are happy with Vim. Running Clojure code with right from the editor works well these days. Still you wonder why all those people you consider smart seem to be so committed to Emacs. So I decided to try it once again.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#keybindings" id="keybindings"&gt;&lt;/a&gt;Keybindings&lt;/h2&gt;
&lt;p&gt;Let's start with a slight rant: I completely do not understand how anyone can use Emacs' default keybindings.  Being a Vim user I obviously have a thing for mode-based editing but Emacs' keybindings are beyond my understanding. Some simple movement commands to illustrate this:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Emacs&lt;/th&gt;
      &lt;th&gt;Vim&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Move cursor down one line&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Ctrl-n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;j&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Move cursor up one line&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Ctrl-p&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;k&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Move cursor left one character&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Ctrl-b&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Move cursor right one character&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Ctrl-f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;l&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These are the commands recommended in the Emacs tutorial (which you open with &lt;code&gt;Ctrl-h t&lt;/code&gt;). They are mnemonic, what makes them easy to learn--but is that really the most important factor to consider for commands you will use hundreds of times a day? I don't think so. I tried to convince myself that it might be worth to get used to Emacs' default keybindings but after some time I gave up and installed &lt;code&gt;evil-mode&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#mode-based-editing-with-evil-mode" id="mode-based-editing-with-evil-mode"&gt;&lt;/a&gt;Mode-based Editing with Evil Mode&lt;/h2&gt;
&lt;p&gt;In my memory &lt;code&gt;evil-mode&lt;/code&gt; sucked. I was delightfully surprised that it doesn't (anymore?). Evil brings well-done mode based editing to Emacs. As you continue to evolve your Emacs configuration you will most likely install additional packages that bring weird Emacs-style keybindings with them. Since you now have a mode-based editor you can use shorter, easier to remember keybindings to call functions provided by these packages. A useful helper that fits a sweet spot in my Vim-brain is &lt;code&gt;evil-leader&lt;/code&gt; which allows you to setup &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; based keybindings, just like you can do it in Vim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(evil-leader/set-leader &amp;quot;,&amp;quot;)
(evil-leader/set-key
  &amp;quot;,&amp;quot; 'projectile-find-file)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this I can open a small panel that finds files in my project in a fuzzy way (think Ctrl-p for Vim) hitting &lt;code&gt;,&lt;/code&gt; two times instead of &lt;code&gt;Ctrl-c p f&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#batteries-included" id="batteries-included"&gt;&lt;/a&gt;Batteries Included&lt;/h2&gt;
&lt;p&gt;What I really enjoyed with Emacs was the fact that a package manager comes right with it. After adding a community maintained package repository to your configuration you have access to some 2000 packages covering Git integration, syntax and spell checking, interactive execution of Clojure code and more. This has been added in a the last major update (&lt;code&gt;v24&lt;/code&gt;) after being a community project for some years.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#conclusion" id="conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Vim's lack of support for async execution of code has always bugged me and although there are some projects to change this I can't see it being properly fixed at least until NeoVim becomes the go-to Vim implementation. Emacs allows me to kick off commands and do other things until they return. In addition to that it nicely embeds Vim's most notable idea, mode-based editing, very well, allowing me to productively edit text while having a solid base to extend and to interactively write programs.&lt;/p&gt;
&lt;p&gt;If you are interested in seeing how all that comes together in my Emacs configuration you can find it &lt;a href="https://github.com/martinklepsch/dotfiles/blob/master/emacs.d/init.el"&gt;on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, July 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:2818d220-0d76-4797-b967-b6fa9e5018e0</id><title>Heroku-like Deployment With Dokku And DigitalOcean</title><link href="https://www.martinklepsch.org/posts/setting-up-your-own-little-heroku-with-dokku-and-digitalocean.html" type="text/html" title="Heroku-like Deployment With Dokku And DigitalOcean" rel="alternate"></link><published>2014-03-12T00:00:00Z</published><updated>2014-03-12T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/setting-up-your-own-little-heroku-with-dokku-and-digitalocean.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Over the weekend I sat down to play around with Docker/Dokku and was able to set up a small machine on DigitalOcean that basically offers Heroku-like deployment. It was surprisingly simple s..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/setting-up-your-own-little-heroku-with-dokku-and-digitalocean.html" rel="canonical"&gt;&lt;title&gt;Heroku-like Deployment With Dokku And DigitalOcean — Martin Klepsch&lt;/title&gt;&lt;meta content="Heroku-like Deployment With Dokku And DigitalOcean" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Over the weekend I sat down to play around with Docker/Dokku and was able to set up a small machine on DigitalOcean that basically offers Heroku-like deployment. It was surprisingly simple s..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/setting-up-your-own-little-heroku-with-dokku-and-digitalocean.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Heroku-like Deployment With Dokku And DigitalOcean" name="twitter:title"&gt;&lt;meta content="Over the weekend I sat down to play around with Docker/Dokku and was able to set up a small machine on DigitalOcean that basically offers Heroku-like deployment. It was surprisingly simple s..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/setting-up-your-own-little-heroku-with-dokku-and-digitalocean.html" title="Permalink: Heroku-like Deployment With Dokku And DigitalOcean"&gt;March 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Heroku-like Deployment With Dokku And DigitalOcean&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;Over the weekend I sat down to play around with Docker/Dokku and was able to set up a small machine on DigitalOcean that basically offers Heroku-like deployment. It was surprisingly simple so here is some rough outline that should get you going.&lt;/p&gt;
&lt;aside&gt;This guide is slightly opinionated and things can be done differently.
I decided to settle for the way thats closest to Heroku to keep things short.&lt;/aside&gt;
&lt;h2&gt;&lt;a href="#create-a-droplet-at-digitalocean" id="create-a-droplet-at-digitalocean"&gt;&lt;/a&gt;Create a Droplet at Digitalocean&lt;/h2&gt;
&lt;p&gt;Go to &lt;a href="https://www.digitalocean.com/?refcode=fb6eb9b8b286"&gt;DigitalOcean&lt;/a&gt; and create a droplet (note the comments below the screenshots):&lt;/p&gt;
&lt;figure&gt;
&lt;img class='bordered' src='/images/hostname.png'&gt;
&lt;figcaption&gt;Make sure the hostname is a fully qualified domain name, as it will
be the git remote you'll push to to deploy.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img class='bordered' src='/images/image.png'&gt;
&lt;figcaption&gt;When selecting the image, go to Applications and select the Dokku
one.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;There are some unresolved problems with Dokku on Ubuntu 13+ so if you are not just playing around you might want to setup Dokku manually.  After that you're ready to hit the create button and a droplet will be created within the next minute. The last bit of server-setup that’s required is Dokku’s.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#setting-up-dokku" id="setting-up-dokku"&gt;&lt;/a&gt;Setting up Dokku&lt;/h2&gt;
&lt;p&gt;To get to Dokku’s setup screen just steer your browser to the IP shown in the droplet’s detail view:&lt;/p&gt;
&lt;figure&gt;
&lt;img class='bordered' src='/images/droplet-ip.png'&gt;
&lt;/figure&gt;
&lt;p&gt;What you’ll see next is Dokku’s setup screen:&lt;/p&gt;
&lt;figure&gt;
&lt;img class='bordered' src='/images/dokku-setup.png'&gt;
&lt;figcaption&gt;Add an SSH key, tick the virtualhost checkbox, and make
sure the hostname is correct.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;&lt;a href="#dns-setup" id="dns-setup"&gt;&lt;/a&gt;DNS Setup&lt;/h2&gt;
&lt;p&gt;To get the hostname you chose earlier actually point to your machine running Dokku you need to add two A records to the zonefile of your domain. This strongly varies between domain/DNS providers so I can’t exactly say how it’d be done for yours. Whats important is that your provider supports wildcard entries. Also the value of an A record should be only the subdomain part of the hostname you set earlier, not the complete domain.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A       &amp;lt;subdomain-of-hostname&amp;gt;      &amp;lt;droplet-ip&amp;gt;
A       *.&amp;lt;subdomain-of-hostname&amp;gt;    &amp;lt;droplet-ip&amp;gt;

# in a zonefile it’d look like this:
*.apps 10800 IN A 107.170.35.171
apps 10800 IN A 107.170.35.171
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a href="#deploying" id="deploying"&gt;&lt;/a&gt;Deploying&lt;/h2&gt;
&lt;p&gt;After you’ve waited three hours for DNS servers to propagate the changes you should be able to do something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:heroku/node-js-sample.git
cd node-js-sample
git remote add digital-ocean dokku@apps.example.com:nodeapp
git push digital-ocean master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now going to &lt;code&gt;nodeapp.&amp;lt;dokku-hostname&amp;gt;&lt;/code&gt; should bring up “Hello World” from the app we just cloned and pushed.&lt;/p&gt;
&lt;p&gt;If you want to add have a custom domain point to your app you'll need to either push to a remote like &lt;code&gt;dokku@apps.example.com:example.com&lt;/code&gt; or edit the nginx.conf that comes with Dokku’s nginx plugin.&lt;/p&gt;
&lt;p&gt;Thanks to Dokku’s &lt;a href="https://github.com/progrium/buildstep"&gt;Buildstep&lt;/a&gt; that utilizes Heroku’s opensource buildpacks you can now deploy almost every application you can deploy to Heroku to Dokku as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Have fun!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, March 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:103f391e-8ccb-46ab-ac3b-7051d646a5fb</id><title>Woodworking Masterclasses</title><link href="https://www.martinklepsch.org/posts/woodworking-masterclasses.html" type="text/html" title="Woodworking Masterclasses" rel="alternate"></link><published>2014-02-19T00:00:00Z</published><updated>2014-02-19T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/woodworking-masterclasses.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Back when I lived at home my dad used to make fun of my mechanical skills. He said if everyone just sits in front of computers the whole day no one will know how to drill a hole at some poin..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/woodworking-masterclasses.html" rel="canonical"&gt;&lt;title&gt;Woodworking Masterclasses — Martin Klepsch&lt;/title&gt;&lt;meta content="Woodworking Masterclasses" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Back when I lived at home my dad used to make fun of my mechanical skills. He said if everyone just sits in front of computers the whole day no one will know how to drill a hole at some poin..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/woodworking-masterclasses.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Woodworking Masterclasses" name="twitter:title"&gt;&lt;meta content="Back when I lived at home my dad used to make fun of my mechanical skills. He said if everyone just sits in front of computers the whole day no one will know how to drill a hole at some poin..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/woodworking-masterclasses.html" title="Permalink: Woodworking Masterclasses"&gt;February 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Woodworking Masterclasses&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;Back when I lived at home my dad used to make fun of my mechanical skills. He said if everyone just sits in front of computers the whole day no one will know how to drill a hole at some point. He would like what follows.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://woodworkingmasterclasses.com/"&gt;Woodworking Masterclasses&lt;/a&gt; is an online course to woodworking. It's the first time that I've seen such high quality material about learning a craft. They offer a simple monthly subscription to their courses with a new video being released every week. The videos are &lt;strong&gt;top-notch&lt;/strong&gt;. Kind of like you would expect it by a company like Treehouse but not by people who do woodworking and are probably not too familiar with cutting videos and this type of stuff. Take a look:&lt;/p&gt;
&lt;figure&gt;
&lt;div class="responsive-embed"&gt;&lt;iframe src="//player.vimeo.com/video/52801444?title=0&amp;amp;byline=0&amp;amp;portrait=0&amp;amp;color=81c79b"
width="500" height="281" frameborder="0" webkitallowfullscreen
mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;a href="http://vimeo.com/52801444"&gt;Clock Episode 1&lt;/a&gt; from &lt;a href="http://vimeo.com/woodworking"&gt;woodworking&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I like how the internet supports the ongoing evolvement of crafts and woodworking has always fascinated me. These videos make me want to be at a farm with a huge workbench.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, February 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:c1881d68-6011-4888-a698-25339be6114f</id><title>Early Adopters And Inverted Social Proof</title><link href="https://www.martinklepsch.org/posts/early-adopters-and-inverted-social-proof.html" type="text/html" title="Early Adopters And Inverted Social Proof" rel="alternate"></link><published>2014-02-07T00:00:00Z</published><updated>2014-02-07T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/early-adopters-and-inverted-social-proof.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Hirschman credits the stability of early America with the fact that discontents could simply travel west until they felt sufficiently freed from its rules and restrictions. [...]  There’s no..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/early-adopters-and-inverted-social-proof.html" rel="canonical"&gt;&lt;title&gt;Early Adopters And Inverted Social Proof — Martin Klepsch&lt;/title&gt;&lt;meta content="Early Adopters And Inverted Social Proof" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Hirschman credits the stability of early America with the fact that discontents could simply travel west until they felt sufficiently freed from its rules and restrictions. [...]  There’s no..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/early-adopters-and-inverted-social-proof.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Early Adopters And Inverted Social Proof" name="twitter:title"&gt;&lt;meta content="Hirschman credits the stability of early America with the fact that discontents could simply travel west until they felt sufficiently freed from its rules and restrictions. [...]  There’s no..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/early-adopters-and-inverted-social-proof.html" title="Permalink: Early Adopters And Inverted Social Proof"&gt;February 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Early Adopters And Inverted Social Proof&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;blockquote&gt;
&lt;p&gt;Hirschman credits the stability of early America with the fact that discontents could simply travel west until they felt sufficiently freed from its rules and restrictions. [...] &lt;br&gt; There’s no limit on the number of possible subreddits, stack exchange sites, or wikipedia pages that can be made, so a user can always keep traveling west until they find something that’s worth sticking around to defend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="{{page.resource}}"&gt;A great analysis&lt;/a&gt; of why people are early adopters and how the constantly changing face of a community can affect their loyality to a product. One of those timeless reads you should probably re-read every now and then.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, February 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:24f91dd6-6b9e-4bca-9ae3-6f0a1465b4aa</id><title>Living Small</title><link href="https://www.martinklepsch.org/posts/living-small.html" type="text/html" title="Living Small" rel="alternate"></link><published>2014-02-05T00:00:00Z</published><updated>2014-02-05T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/living-small.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Living in a world where consumerism appears to be the predominant behaviour it seems more and more exciting to me to live a less materialistic lifestyle. What follows are some of the things ..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/living-small.html" rel="canonical"&gt;&lt;title&gt;Living Small — Martin Klepsch&lt;/title&gt;&lt;meta content="Living Small" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Living in a world where consumerism appears to be the predominant behaviour it seems more and more exciting to me to live a less materialistic lifestyle. What follows are some of the things ..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/living-small.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Living Small" name="twitter:title"&gt;&lt;meta content="Living in a world where consumerism appears to be the predominant behaviour it seems more and more exciting to me to live a less materialistic lifestyle. What follows are some of the things ..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/living-small.html" title="Permalink: Living Small"&gt;February 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Living Small&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;Living in a world where consumerism appears to be the predominant behaviour it seems more and more exciting to me to live a less materialistic lifestyle. What follows are some of the things that stimulated my thinking — maybe they do the same for you.&lt;/p&gt;
&lt;p&gt;After stumbling upon Bruce Hauman’s blog while trying to figure out some Clojure stuff I discovered another post on his blog where he talks about &lt;a href="http://rigsomelight.com/2013/09/09/frameless-geodesic-dome.html"&gt;building a geodesic dome&lt;/a&gt; in which he’s now (partly?) living for 3.5 years. It’s an amazingly analytical post about building something and simplifying it to it’s purest, most functional form. Motivated by spending less money on rent he iterated on his idea resulting in this construction:&lt;/p&gt;
&lt;figure&gt;
&lt;img src='/images/dome-cropped.jpg'&gt;
&lt;figcaption&gt;In case you were wondering what this “geodesic dome” thing looks like&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In his post he also mentions the &lt;a href="http://thetinylife.com/what-is-the-tiny-house-movement/"&gt;Tiny Housing Movement&lt;/a&gt; through which I found a TED talk that nicely illustrates the pitfalls of the idea of living “a good life” once you have your own income. The key line in the talk is: &lt;strong&gt;What does freedom mean to you?&lt;/strong&gt; I wanted to give a small summary here but, as it is with TED talks, &lt;a href="http://www.youtube.com/watch?v=9XRPbFIN4lk"&gt;the talk itself&lt;/a&gt; does it’s job pretty well.&lt;/p&gt;
&lt;p&gt;I believe as thoughtful members of our society we should &lt;strong&gt;rethink our relationship to stuff&lt;/strong&gt;. How can we, as a society, make better use of the things we have at our disposal? What do I really need to &lt;strong&gt;own&lt;/strong&gt; to live my life? Ideas like &lt;a href="http://en.wikipedia.org/wiki/Sharing_economy"&gt;the share economy&lt;/a&gt; seem like a logical step with the increasing ease of sharing/routing information.&lt;/p&gt;
&lt;p&gt;Purposely living with less is obviously not a new idea and so it happens to be part of things like &lt;a href="http://zenhabits.net/minimalist-fun-the-100-things-challenge/"&gt;the 100 Things Challenge&lt;/a&gt;. Coming across the 100 Things Challenge again and again I want to try it myself. In February I'm going to create an inventory of the things I own. Let’s see if the number of things I own is going to be above or below 100.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stuff has gotten a lot cheaper, but our attitudes toward it haven't changed correspondingly. We overvalue stuff. &lt;cite&gt;&lt;a href='http://paulgraham.com/stuff.html'&gt;Stuff&lt;/a&gt; by Paul Graham&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, February 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:28bbfb38-f744-443c-808e-ad3f1ebd808f</id><title>Sending You a Telegram</title><link href="https://www.martinklepsch.org/posts/telegram.html" type="text/html" title="Sending You a Telegram" rel="alternate"></link><published>2014-01-09T00:00:00Z</published><updated>2014-01-09T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/telegram.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Telegram is a new messenger built by Pavel and Nikolai Durov.  They previously founded vk.com, Europe&amp;apos;s second largest social network after Facebook (especially popular in Russia). A Few Rea..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/telegram.html" rel="canonical"&gt;&lt;title&gt;Sending You a Telegram — Martin Klepsch&lt;/title&gt;&lt;meta content="Sending You a Telegram" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Telegram is a new messenger built by Pavel and Nikolai Durov.  They previously founded vk.com, Europe&amp;apos;s second largest social network after Facebook (especially popular in Russia). A Few Rea..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/telegram.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Sending You a Telegram" name="twitter:title"&gt;&lt;meta content="Telegram is a new messenger built by Pavel and Nikolai Durov.  They previously founded vk.com, Europe&amp;apos;s second largest social network after Facebook (especially popular in Russia). A Few Rea..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/3.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/telegram.html" title="Permalink: Sending You a Telegram"&gt;January 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Sending You a Telegram&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;&lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt; is a new messenger built by Pavel and Nikolai Durov.  They previously founded vk.com, Europe's second largest social network after Facebook (especially popular in Russia).&lt;/p&gt;
&lt;h2&gt;&lt;a href="#a-few-reasons-why-its-great" id="a-few-reasons-why-its-great"&gt;&lt;/a&gt;A Few Reasons Why It's Great&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Unlike most other messaging apps their &lt;a href="https://telegram.org/source"&gt;clients (Android, iOS) source code and the underlying protocols are released with an open source license&lt;/a&gt; (GPL v2)&lt;/li&gt;
&lt;li&gt;The founders note that they have no intention of &lt;a href="https://telegram.org/faq#q-how-are-you-going-to-make-money-out-of-this"&gt;making money with Telegram&lt;/a&gt; If they ever run out of money they want to finance it with donations and non-essential goodies.&lt;/li&gt;
&lt;li&gt;There is an &lt;a href="https://core.telegram.org/api"&gt;API&lt;/a&gt; that allows anyone to hook into Telegram and build clients, bots and additional tools.&lt;/li&gt;
&lt;li&gt;The open API has led to the creation of &lt;a href="https://itunes.apple.com/de/app/messenger-for-telegram/id747648890"&gt;Mac&lt;/a&gt;, &lt;a href="http://tdesktop.com/"&gt;Windows&lt;/a&gt; and various other clients (eg. &lt;a href="https://github.com/vysheng/tg"&gt;commandline&lt;/a&gt;) that allow you to use Telegram on multiple devices (with proper syncing).&lt;/li&gt;
&lt;li&gt;Groups can hold up to 200 users (compared to WhatsApp that allows you to create 50 groups à 50 participants max.)&lt;/li&gt;
&lt;li&gt;All communication in Telegram &lt;a href="https://telegram.org/faq#security"&gt;is encrypted&lt;/a&gt; and there is even an option to create “&lt;a href="https://telegram.org/faq#secret-chats"&gt;secret chats&lt;/a&gt;” that: won’t be stored on Telegram’s servers, can’t be fowarded and will delete themself after some time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Currently available for &lt;a href="https://itunes.apple.com/us/app/telegram-messenger/id686449807"&gt;iOS&lt;/a&gt;, &lt;a href="https://play.google.com/store/apps/details?id=org.telegram.messenger"&gt;Android&lt;/a&gt;, &lt;a href="https://itunes.apple.com/de/app/messenger-for-telegram/id747648890"&gt;Mac&lt;/a&gt; &amp;amp; &lt;a href="http://tdesktop.com"&gt;Windows&lt;/a&gt; there is really no reason not to make the switch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Send me a message how you like it:&lt;/strong&gt; &lt;a href="tel:+4917664718250"&gt;+49176 64718250&lt;/a&gt;.&lt;br /&gt;
(It’s easy: just tap the number on your phone, save me as contact and I’ll appear in your Telegram contacts.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; Although it's not a completely decentralized service (as communication services should eventually be in the future) it seems to be a big step in the right direction.&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, January 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:a4f45de9-5915-46ed-a41a-b10f4560a177</id><title>Running a Marathon, Or Not</title><link href="https://www.martinklepsch.org/posts/running-a-marathon-or-not.html" type="text/html" title="Running a Marathon, Or Not" rel="alternate"></link><published>2014-01-08T00:00:00Z</published><updated>2014-01-08T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/running-a-marathon-or-not.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="Earlier this year I came to the “very” surprising conclusion that I&amp;apos;m not doing enough sports in relation to the hours I spend in front of a computer every day. I decided to run a marathon t..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/running-a-marathon-or-not.html" rel="canonical"&gt;&lt;title&gt;Running a Marathon, Or Not — Martin Klepsch&lt;/title&gt;&lt;meta content="Running a Marathon, Or Not" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="Earlier this year I came to the “very” surprising conclusion that I&amp;apos;m not doing enough sports in relation to the hours I spend in front of a computer every day. I decided to run a marathon t..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/running-a-marathon-or-not.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Running a Marathon, Or Not" name="twitter:title"&gt;&lt;meta content="Earlier this year I came to the “very” surprising conclusion that I&amp;apos;m not doing enough sports in relation to the hours I spend in front of a computer every day. I decided to run a marathon t..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/running-a-marathon-or-not.html" title="Permalink: Running a Marathon, Or Not"&gt;January 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Running a Marathon, Or Not&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;Earlier this year I came to the “very” surprising conclusion that I'm not doing enough sports in relation to the hours I spend in front of a computer every day. &lt;a href="/2013/03/10/From-Zero-To-Marathon-In-Six-Months/"&gt;I decided to run a marathon this September&lt;/a&gt;. I didn't. I did something else though that was fun and kind of sporty as well.&lt;/p&gt;
&lt;p&gt;After starting runnning in March it was pretty amazing to see how quickly your stamina improves and longer distances become easier and less painful to run. After that initial success though improvements got smaller and motivation tanked quickly. Also the marathon I wanted to run was already booked out apparently.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;March&lt;/th&gt;
      &lt;th&gt;April&lt;/th&gt;
      &lt;th&gt;May&lt;/th&gt;
      &lt;th&gt;Juni&lt;/th&gt;
      &lt;th&gt;Juli&lt;/th&gt;
      &lt;th&gt;August&lt;/th&gt;
      &lt;th&gt;Septemper&lt;/th&gt;
      &lt;th&gt;October&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;60.3km&lt;/td&gt;
      &lt;td&gt;33.5km&lt;/td&gt;
      &lt;td&gt;18.3km&lt;/td&gt;
      &lt;td&gt;5.5km&lt;/td&gt;
      &lt;td&gt;5.1km&lt;/td&gt;
      &lt;td&gt;0.0km&lt;/td&gt;
      &lt;td&gt;20km&lt;/td&gt;
      &lt;td&gt;4.8km&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;From a friend who also inspired me to go running I heard about &lt;strong&gt;Tough Mudder&lt;/strong&gt;. Since I already noticed my lack of a goal I almost immediately registered in the beginning of June. The description on Wikipedia sounded exciting for sure:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tough Mudder&lt;/strong&gt; is an endurance event series in which participants attempt 10-12 mile long military-style obstacle courses. Designed by British Special Forces to test mental as well as physical strength, obstacles often play on common human fears, such as fire, water, electricity and heights. &lt;cite&gt;&lt;a href='http://en.wikipedia.org/wiki/Tough_Mudder'&gt;Wikipedia&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a href="#preparation" id="preparation"&gt;&lt;/a&gt;&lt;strike&gt;Preparation&lt;/strike&gt;&lt;/h2&gt;
&lt;p&gt;After seeing the (surprisingly) fast improvements when training I was certain I could get ready for a 20km run in a month or less. So I decided to start training a month before the event on 19th October:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;01.06 - 23.09&lt;/th&gt;
      &lt;th&gt;24.09&lt;/th&gt;
      &lt;th&gt;28.09&lt;/th&gt;
      &lt;th&gt;30.09&lt;/th&gt;
      &lt;th&gt;06.10&lt;/th&gt;
      &lt;th&gt;19.10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0.0km&lt;/td&gt;
      &lt;td&gt;5.7km&lt;/td&gt;
      &lt;td&gt;9km&lt;/td&gt;
      &lt;td&gt;6.3km&lt;/td&gt;
      &lt;td&gt;4.8km&lt;/td&gt;
      &lt;td&gt;Tough Mudder&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Somehow I wasn't quite persistent and stopped shortly after starting again. I guess mostly because it was such a pain to build up stamina &lt;strong&gt;again&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href="#oh-shit-its-tomorrow" id="oh-shit-its-tomorrow"&gt;&lt;/a&gt;Oh Shit! It's tomorrow!&lt;/h2&gt;
&lt;p&gt;The days immediately before the event were full of uncertainty and doubt whether I could make it or not. 20km without any training? Is that even remotely possible? I never ran 20km before. Sometimes excuses not to go popped up in my mind but the hefty price tag of around 100€ and the social pressure of running in a group didn't really leave the option of not going.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Surprisingly it was possible&lt;/strong&gt;. The around 15 obstacles usually took some time to pass and equally gave some to rest. The hardest part (stamina-wise) was a 2-4km trail up and down a hill over and over again. The whole course took us around 3 hours to complete.&lt;br /&gt;
We got a bit dirty on the way. I say &lt;strong&gt;we&lt;/strong&gt; because completing the course on your own is almost impossible and we certainly have been a great team:&lt;/p&gt;
&lt;figure&gt;
&lt;img src='/images/tough-mudder.jpg'&gt;
&lt;/figure&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, January 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry><entry><id>urn:uuid:798632b6-60b7-4163-b1cc-ef3f49bbbc7b</id><title>Code Simplicity</title><link href="https://www.martinklepsch.org/posts/code-simplicity-review.html" type="text/html" title="Code Simplicity" rel="alternate"></link><published>2014-01-06T00:00:00Z</published><updated>2014-01-06T00:00:00Z</updated><content type="html" xml:base="https://www.martinklepsch.org/posts/code-simplicity-review.html">&lt;!DOCTYPE html&gt;
&lt;html itemtype="http://schema.org/Blog" lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"&gt;&lt;meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"&gt;&lt;meta content="Martin Klepsch (martinklepsch@googlemail.com)" itemprop="author" name="author"&gt;&lt;meta content="blog, clojure, development, clojurescript, heroku, amazon s3, aws" itemprop="keywords" name="keywords"&gt;&lt;meta content="When O&amp;apos;Reilly promoted their cyber monday I somehow really got into a shopping spree. First book I finished now is Code Simplicity by Max Kanat Alexander.  The book doesn&amp;apos;t hold on to the sc..." itemprop="description" name="description"&gt;&lt;link href="https://martinklepsch.org/posts/code-simplicity-review.html" rel="canonical"&gt;&lt;title&gt;Code Simplicity — Martin Klepsch&lt;/title&gt;&lt;meta content="Code Simplicity" property="og:title"&gt;&lt;meta content="article" property="og:type"&gt;&lt;meta content="When O&amp;apos;Reilly promoted their cyber monday I somehow really got into a shopping spree. First book I finished now is Code Simplicity by Max Kanat Alexander.  The book doesn&amp;apos;t hold on to the sc..." property="og:description"&gt;&lt;meta content="https://martinklepsch.org/posts/code-simplicity-review.html" property="og:url"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" property="og:image"&gt;&lt;meta content="martinklepsch.org" property="og:site_name"&gt;&lt;meta content="summary" name="twitter:card"&gt;&lt;meta content="@martinklepsch" name="twitter:site"&gt;&lt;meta content="@martinklepsch" name="twitter:creator"&gt;&lt;meta content="Code Simplicity" name="twitter:title"&gt;&lt;meta content="When O&amp;apos;Reilly promoted their cyber monday I somehow really got into a shopping spree. First book I finished now is Code Simplicity by Max Kanat Alexander.  The book doesn&amp;apos;t hold on to the sc..." name="twitter:description"&gt;&lt;meta content="https://martinklepsch.org/images/selfies/2.jpg" name="twitter:image"&gt;&lt;link href="/images/favicon.ico" rel="shortcut icon"&gt;&lt;link href="/atom.xml" rel="alternate" title="Sitewide Atom Feed" type="application/atom+xml"&gt;&lt;link href="/stylesheets/martinklepschorg-v3.css" rel="stylesheet" type="text/css"&gt;&lt;script type="text/javascript"&gt;var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3138561-8']);
    _gaq.push(['_setDomainName', 'martinklepsch.org']);
    _gaq.push(['_trackPageview']);

    setTimeout("_gaq.push(['_trackEvent', '15_seconds', 'read'])", 15000);

    (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript';
    ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl'
    : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
    })();&lt;/script&gt;&lt;/head&gt;&lt;body class="system-sans-serif dark-gray"&gt;&lt;div class="mh3"&gt;&lt;div class="mw7 center mb6"&gt;&lt;article class="mt5" itemprop="blogPost" itemscope="" itemtype="http://schema.org/BlogPosting"&gt;&lt;div class="f6 db normal mw6 center"&gt;&lt;a class="link" href="/posts/code-simplicity-review.html" title="Permalink: Code Simplicity"&gt;January 2014&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="/" title="Home"&gt;Home&lt;/a&gt;&lt;span class="ph2"&gt;/&lt;/span&gt;&lt;a class="link" href="https://twitter.com/martinklepsch" title="@martinklepsch on Twitter"&gt;@martinklepsch&lt;/a&gt;&lt;/div&gt;&lt;h1 class="f1-ns f2 fw1 w-80-ns lh-title mw6 center"&gt;Code Simplicity&lt;/h1&gt;&lt;section class="mkdwn lh-copy"&gt;&lt;p&gt;When O'Reilly promoted their cyber monday I somehow really got into a shopping spree.&lt;/p&gt;
&lt;p&gt;First book I finished now is &lt;a href="http://shop.oreilly.com/product/0636920022251.do"&gt;Code Simplicity&lt;/a&gt; by &lt;a href="http://max.kanat-alexander.com/"&gt;Max Kanat Alexander&lt;/a&gt;.  The book doesn't hold on to the scientific approach that the blurb promises but once I made my peace with that it became a good read.&lt;br /&gt;
Some of the things I liked most:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It provides good reasoning why an iterative process usually provides better results than the old &lt;em&gt;Plan &amp;amp; Implement&lt;/em&gt; workflow.&lt;/li&gt;
&lt;li&gt;It has a strong argumentation for testing that can help you the next time you have to explain why it is important or understand it yourself if you didn't so far.&lt;/li&gt;
&lt;li&gt;It gives you some great new angles on how to prioritize features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall I'd probably recommend the book but you shouldn't expect to much scientific proof. Probably that's not even possible in that area but the blurb said so and that caused &lt;a href="https://readmill.com/christoffer/reads/code-simplicity"&gt;some&lt;/a&gt; &lt;a href="https://readmill.com/chdorner/reads/code-simplicity"&gt;bad&lt;/a&gt; reviews so take it with a grain of salt.&lt;/p&gt;
&lt;p&gt;You can find all of my personal highlights &lt;a href="https://readmill.com/mklappstuhl/reads/code-simplicity"&gt;on Readmill&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;&lt;div class="mv4 em-before mw6 center"&gt;&lt;a class="link" href="https://twitter.com/martinklepsch"&gt;@martinklepsch&lt;/a&gt;, January 2014&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name>Martin Klepsch</name><email>martinklepsch@googlemail.com</email></author></entry></feed>